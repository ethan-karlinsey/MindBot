{"version":3,"sources":["app/assets/background.jpg","app/assets/logo.png","app/screens/WelcomeScreen.js","app/screens/LoginScreen.js","app/screens/HomeScreen.js","app/screens/ChatbotScreen.js","App.js"],"names":["module","exports","styles","StyleSheet","create","background","flex","height","justifyContent","alignItems","loginButton","width","borderRadius","backgroundColor","marginBottom","registerButton","logo","logoContainer","position","top","logoText","fontWeight","color","buttonText","fontSize","WelcomeScreen","props","navigation","ImageBackground","style","source","require","View","Image","Text","TouchableOpacity","onPress","navigate","container","image","inputView","borderWidth","borderColor","textInput","padding","marginLeft","forgotButton","marginTop","loginText","LoginScreen","useState","setEmail","setPassword","blurRadius","TextInput","placeholder","placeholderTextColor","onChangeText","email","secureTextEntry","password","button","HomeScreen","firebase","default","apps","length","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","chatsRef","firestore","collection","input","ChatbotScreen","user","setUser","name","setName","messages","setMessages","useEffect","a","async","AsyncStorage","getItem","JSON","parse","readUser","unsubscribe","onSnapshot","querySnapshot","messageFirestore","docChanges","filter","type","map","message","doc","data","createdAt","toDate","sort","b","getTime","appendMessages","useCallback","previousMessages","GiftedChat","append","onSend","writes","m","add","Promise","all","value","Button","_id","Math","random","toString","substring","setItem","stringify","title","Stack","createStackNavigator","App","NavigationContainer","Navigator","screenOptions","headerShown","Screen","component","options","headerTitleAlign"],"mappings":"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","file":"static/js/app.8e41719d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/background.94ade58e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.d4080bda.png\";","import { Image, ImageBackground, StyleSheet, View, Text, TouchableWithoutFeedback, TouchableOpacity, Button } from 'react-native';\r\nimport React, { useState } from 'react';\r\n\r\nfunction WelcomeScreen({ navigation }, props) {\r\n    return (\r\n        <ImageBackground \r\n            style={styles.background}\r\n            source={require(\"../assets/background.jpg\")} >\r\n            <View style={styles.logoContainer}>\r\n                <Image source={require(\"../assets/logo.png\")} style={styles.logo}/>\r\n                <Text style={styles.logoText} >MIND BOT</Text>\r\n            </View>\r\n            <TouchableOpacity\r\n                style={styles.loginButton} \r\n                onPress={() => navigation.navigate(\"Sign In\")}>\r\n                <Text style={styles.buttonText}>Sign In</Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity\r\n                style={styles.registerButton}\r\n                onPress={() => navigation.navigate(\"Sign In\")}>\r\n                <Text style={styles.buttonText}>Create Account</Text>\r\n            </TouchableOpacity>\r\n        </ImageBackground>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    background: {\r\n        flex: 1,\r\n        height: '100%',\r\n        justifyContent: \"flex-end\",\r\n        alignItems: 'center'\r\n    },\r\n    loginButton: {\r\n        width: '70%',\r\n        height: 50,\r\n        borderRadius: 30,\r\n        backgroundColor: \"#ffa480\",\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        marginBottom: 20,\r\n    },\r\n    registerButton: {\r\n        width: '70%',\r\n        height: 50,\r\n        borderRadius: 30,\r\n        backgroundColor: \"#a8a8a8\",\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        marginBottom: 50,\r\n    },\r\n    logo: {\r\n        width: 100,\r\n        height: 100,\r\n    },\r\n    logoContainer: {\r\n        position: 'absolute',\r\n        top: 90,\r\n        alignItems: 'center',\r\n    },\r\n    logoText: {\r\n        fontWeight: 'bold',\r\n        color: '#949494'\r\n    },\r\n    buttonText: {\r\n        fontSize: 24,\r\n        fontWeight: 'bold',\r\n        color: 'white',\r\n    }\r\n})\r\n\r\nexport default WelcomeScreen;","import React, { useState } from 'react';\r\nimport { Text, StyleSheet, View, Image, TextInput, TouchableOpacity, ImageBackground } from 'react-native';\r\n\r\nfunction LoginScreen({ navigation }, props) {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    return (\r\n        <ImageBackground \r\n            source={require(\"../assets/background.jpg\")}\r\n            style={styles.container}\r\n            blurRadius={7}>\r\n            <Image style={styles.image} source={require(\"../assets/logo.png\")} />\r\n            <View style={styles.inputView}>\r\n                <TextInput\r\n                    style={styles.textInput}\r\n                    placeholder=\"Email\"\r\n                    placeholderTextColor=\"#a8a8a8\"\r\n                    onChangeText={(email) => setEmail(email)} />\r\n            </View>\r\n            <View style={styles.inputView}>\r\n                <TextInput\r\n                    style={styles.textInput}\r\n                    placeholder=\"Password\"\r\n                    placeholderTextColor=\"#a8a8a8\"\r\n                    secureTextEntry={true}\r\n                    onChangeText={(password) => setPassword(password)} />\r\n            </View>\r\n            <TouchableOpacity>\r\n                <Text style={styles.forgotButton}>Forgot Password?</Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity \r\n                style={styles.loginButton}\r\n                onPress={() => navigation.navigate(\"Home\")} >\r\n                <Text style={styles.loginText}>Sign In</Text>\r\n            </TouchableOpacity>\r\n        </ImageBackground>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: \"#fff\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n    },\r\n    image: {\r\n        width: 100,\r\n        height: 100,\r\n        marginBottom: 40,\r\n    },\r\n    inputView: {\r\n        backgroundColor: \"#fff\",\r\n        borderRadius: 30,\r\n        width: \"70%\",\r\n        height: 45,\r\n        marginBottom: 20,\r\n        alignItems: \"center\",\r\n        borderWidth: 1,\r\n        borderColor: '#a8a8a8'\r\n    },\r\n    textInput: {\r\n        height: 50,\r\n        flex: 1,\r\n        padding: 10,\r\n        marginLeft: 20,\r\n    },\r\n    forgotButton: {\r\n        height: 30,\r\n        marginBottom: 30,\r\n    },\r\n    loginButton: {\r\n        width: \"70%\",\r\n        height: 50,\r\n        borderRadius: 25,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        marginTop: 40,\r\n        backgroundColor: \"#ffa480\",\r\n    },\r\n    loginText: {\r\n        fontSize: 24,\r\n        fontWeight: 'bold',\r\n        color: 'white',\r\n    },\r\n})\r\n\r\nexport default LoginScreen;","import React from 'react';\r\nimport { StyleSheet, TouchableOpacity, Text, ImageBackground, View } from 'react-native'\r\n\r\nfunction HomeScreen({ navigation }, props) {\r\n    return (\r\n        <ImageBackground \r\n            source={require(\"../assets/background.jpg\")}\r\n            blurRadius={1.25}\r\n            style={styles.container}>\r\n            <TouchableOpacity \r\n                style={styles.button}\r\n                onPress={() => navigation.navigate(\"Home\")} >\r\n                <Text style={styles.buttonText}>Mindfulness</Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity \r\n                style={styles.button}\r\n                onPress={() => navigation.navigate(\"Chat Bot\")} >\r\n                <Text style={styles.buttonText}>Chat Bot</Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity \r\n                style={styles.button}\r\n                onPress={() => navigation.navigate(\"Home\")} >\r\n                <Text style={styles.buttonText}>Instant</Text>\r\n            </TouchableOpacity>\r\n        </ImageBackground>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n    },\r\n    button: {\r\n        width: \"60%\",\r\n        height: 80,\r\n        borderRadius: 40,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        backgroundColor: \"#ffa480\",\r\n        marginBottom: 50\r\n    },\r\n    buttonText: {\r\n        fontSize: 20,\r\n        fontWeight: 'bold',\r\n        color: \"white\"\r\n    },\r\n})\r\n\r\nexport default HomeScreen;","import { StatusBar } from 'expo-status-bar';\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport AsyncStorage from '@react-native-community/async-storage'\r\nimport { GiftedChat } from 'react-native-gifted-chat';\r\n//import { AsyncStorage } from 'react-native';\r\nimport { StyleSheet, Text, TextInput, Button, View, LogBox } from 'react-native';\r\n//import * as firebase from 'firebase';\r\nimport 'firebase/firestore';\r\n\r\nconst firebase = require('firebase/app').default;\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBLo3MIDiCutOt63VqJNkEMgLbI71gxBDE\",\r\n  authDomain: \"chatapp-6a550.firebaseapp.com\",\r\n  projectId: \"chatapp-6a550\",\r\n  storageBucket: \"chatapp-6a550.appspot.com\",\r\n  messagingSenderId: \"432038414833\",\r\n  appId: \"1:432038414833:web:6a8228bf2fd1f997219c50\"\r\n};\r\n\r\nif (!firebase.apps.length) {\r\n  firebase.initializeApp(firebaseConfig);\r\n}\r\n\r\n//LogBox.ignoreAllLogs()\r\n\r\nconst db = firebase.firestore()\r\nconst chatsRef = db.collection('chats')\r\n\r\nfunction ChatbotScreen({ navigation }, props) {\r\n  const [user, setUser] = useState(null)\r\n  const [name, setName] = useState('')\r\n  const [messages, setMessages] = useState([])\r\n\r\n  useEffect(() => {\r\n    readUser()\r\n    const unsubscribe = chatsRef.onSnapshot(querySnapshot => {\r\n      const messageFirestore = querySnapshot\r\n        .docChanges()\r\n        .filter(({ type }) => type === 'added')\r\n        .map(({ doc }) => {\r\n          const message = doc.data()\r\n          return { ...message, createdAt: message.createdAt.toDate() }\r\n        })\r\n        .sort((a, b) => b.createdAt.getTime() - a.createdAt.getTime())\r\n      appendMessages(messageFirestore)\r\n    })\r\n    return () => unsubscribe()\r\n  }, [])\r\n\r\n  const appendMessages = useCallback((messages) => {\r\n    setMessages((previousMessages) => GiftedChat.append(previousMessages, messages))\r\n  }, [messages])\r\n\r\n  async function readUser() {\r\n    const user = await AsyncStorage.getItem('user')\r\n    if (user) {\r\n      setUser(JSON.parse(user))\r\n    }\r\n  }\r\n\r\n  async function handlePress() {\r\n    const _id = Math.random().toString(36).substring(7)\r\n    const user = {_id, name}\r\n    await AsyncStorage.setItem('user', JSON.stringify(user))\r\n    setUser(user)\r\n  }\r\n\r\n  async function handleSend(messages) {\r\n    const writes = messages.map(m => chatsRef.add(m))\r\n    await Promise.all(writes)\r\n  }\r\n\r\n  if (!user) {\r\n    return (\r\n    <View style={styles.container}>\r\n      <TextInput style={styles.input} placeholder=\"Enter Name\" value={name} onChangeText={setName} />\r\n      <Button onPress={handlePress} title=\"Enter\" />\r\n    </View>\r\n    );\r\n  }\r\n\r\n  return <GiftedChat messages={messages} user={user} onSend={handleSend} />\r\n  \r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    padding: 30,\r\n  },\r\n  input: {\r\n    height: 50,\r\n    width: '100%',\r\n    borderWidth: 1,\r\n    padding: 15,\r\n    marginBottom: 20,\r\n    borderColor: 'gray'\r\n  }\r\n});\r\n\r\nexport default ChatbotScreen;","import * as React from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport WelcomeScreen from './app/screens/WelcomeScreen';\r\nimport LoginScreen from './app/screens/LoginScreen';\r\nimport HomeScreen from './app/screens/HomeScreen';\r\nimport ChatbotScreen from './app/screens/ChatbotScreen';\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nexport default function App() {\r\n  return (\r\n    <NavigationContainer>\r\n      <Stack.Navigator screenOptions={{ headerShown: false }} >\r\n        <Stack.Screen \r\n          name=\"Welcome\" \r\n          component={WelcomeScreen} \r\n          options={{ headerTitleAlign: \"center\" }} />\r\n        <Stack.Screen\r\n          name=\"Sign In\"\r\n          component={LoginScreen}\r\n          options={{ headerTitleAlign: \"center\", headerShown: true }} />\r\n        <Stack.Screen \r\n          name=\"Home\"\r\n          component={HomeScreen}\r\n          options={{ headerTitleAlign: \"center\" }}/>\r\n        <Stack.Screen \r\n          name=\"Chat Bot\"\r\n          component={ChatbotScreen}\r\n          options={{ headerTitleAlign: \"center\", headerShown: true }}/>\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n}\r\n\r\n\r\n"],"sourceRoot":""}